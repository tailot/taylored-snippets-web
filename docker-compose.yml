# Ancore YAML per non ripetere codice (DRY principle)
x-runner-builder-base: &runner-builder-base
  build:
    context: src/runner

x-orchestrator-base: &orchestrator-base
  build: ./src/orchestrator
  restart: unless-stopped

services:
  # === BUILDERS ===
  runner-builder-alpine:
    <<: *runner-builder-base
    image: runner-image
    profiles: ["alpine"]
    build:
      dockerfile: Dockerfile.alpine

  runner-builder-ubuntu:
    <<: *runner-builder-base
    image: runner-image
    profiles: ["ubuntu"]
    build:
      dockerfile: Dockerfile.ubuntu

  runner-builder-debian:
    <<: *runner-builder-base
    image: runner-image
    profiles: ["debian"]
    build:
      dockerfile: Dockerfile.debian

  # === ORCHESTRATORS ===
  # --- Single Tenant ---
  orchestrator-singletenant-alpine:
    <<: *orchestrator-base
    container_name: orchestrator-singletenant
    profiles: ["singletenant", "alpine"]
    environment:
      - TENANCY_MODE=singletenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-alpine:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  orchestrator-singletenant-ubuntu:
    <<: *orchestrator-base
    container_name: orchestrator-singletenant
    profiles: ["singletenant", "ubuntu"]
    environment:
      - TENANCY_MODE=singletenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-ubuntu:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  orchestrator-singletenant-debian:
    <<: *orchestrator-base
    container_name: orchestrator-singletenant
    profiles: ["singletenant", "debian"]
    environment:
      - TENANCY_MODE=singletenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-debian:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  # --- Multi Tenant ---
  orchestrator-multitenant-alpine:
    <<: *orchestrator-base
    container_name: orchestrator-multitenant
    profiles: ["multitenant", "alpine"]
    environment:
      - TENANCY_MODE=multitenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-alpine:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  orchestrator-multitenant-ubuntu:
    <<: *orchestrator-base
    container_name: orchestrator-multitenant
    profiles: ["multitenant", "ubuntu"]
    environment:
      - TENANCY_MODE=multitenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-ubuntu:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  orchestrator-multitenant-debian:
    <<: *orchestrator-base
    container_name: orchestrator-multitenant
    profiles: ["multitenant", "debian"]
    environment:
      - TENANCY_MODE=multitenant
      - RUNNER_IMAGE=runner-image
    depends_on:
      runner-builder-debian:
        condition: service_completed_successfully
    ports:
      - "3000:3000"

  # === FRONTEND ===
  web-frontend:
    image: nginx:1.25.3-alpine
    profiles:
      - singletenant
      - multitenant
    ports:
      - "4200:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./dist/taylored-snippets-web:/usr/share/nginx/html
    depends_on:
      - orchestrator-singletenant-alpine
      - orchestrator-singletenant-ubuntu
      - orchestrator-singletenant-debian
      - orchestrator-multitenant-alpine
      - orchestrator-multitenant-ubuntu
      - orchestrator-multitenant-debian
